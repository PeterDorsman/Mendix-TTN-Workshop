
/*# sourceMappingURL=data:application/json;charset=utf8;base64,{"version":3,"file":"custom/custom.css","sources":["custom/custom.scss","custom/_custom-variables.scss"],"sourcesContent":["@import \"custom-variables\";\n","@charset \"UTF-8\";\n//== Mendix UI Framework - Welcome to variables file\n//## The Basic step includes the customization that is also available in the Mendix Theme Creator (https://ux.mendix.com)\n\n\n//== Step 1: Brand Colors\n$brand-default: \t                    #acacac;\n$brand-primary: \t                    #2980b9;\n$brand-inverse: \t                    #2c3e50;\n$brand-info: \t                        #3498db;\n$brand-success: \t                    #31AF64;\n$brand-warning: \t                    #f39c12;\n$brand-danger: \t                        #c0392b;\n\n$dark-blue: #146080;\n$dark-grey: #4b4b4b;\n$light-blue: #4eb2e2;\n$medium-blue: #1486bd;\n$medium-grey: #757575;\n$light-grey: #d2d6d9;\n$mendix-blue: #1494d4;\n$black: #242424;\n\n$cyan: #9BE6F8;\n\n$red: rgb(240,98,146);\n$yellow: rgb(255, 238, 88);\n$purple: rgb(149, 117, 205);\n$blue: rgb(79, 195, 247);\n\n$lt-blue:                               #7DA0A9;\n$white:                                 #fff;\n\n//== Typography\n//## Change your font family, weight, line-height, headings and more (used in components/typography)\n\n\n// Font Family / False = fallback from Bootstrap (Helvetica Neue)\n$font: \t                                \"open_sans\", Helvetica, Arial, sans-serif;\n$font-icons:                            \"streamline-24px\";\n\n\n\n// Font Header Size\n$font-size-h1: \t                        39px;\n$font-size-h2: \t                        22px;\n$font-size-h3: \t                        26px;\n$font-size-h4: \t                        19px;\n$font-size-h5:                          14px;\n$font-size-h6:                          11px;\n$font-average:                          14px;\n\n// Line Height\n$line-height-base:                      1.428571429;\n\n\n\n\n//== Gray darkens\n//## Different gray darkens to be used for our variables and components\n$gray-darker:                           #222;\n$gray-dark:                             #333;\n$gray:                                  #666;\n$gray-light:                            #999;\n$gray-primary:                          #DDD;\n$gray-lighter:                          #eee;\n\n\n\n\n//== Global Border Color\n// The default border color used by Datagrid, Listview, Tables, Dataview, Modals and more\n$brand-default:                  $gray-lighter;\n\n\n//\n\n//== Color variations\n//## These variations are used to support several other variables and components\n\n// Basic Text colors\n$text-dark:                             #000;\n$text-dark-light:                       lighten($text-dark,40);\n$text-dark-disabled:                    rgba($text-dark,.26);\n$text-dark-hint:                        rgba($text-dark,.26);\n\n$text-light:                            #FFF;\n$text-lighter:                          rgba($text-light,.7);\n$text-light-disabled:                   rgba($text-light,.3);\n$text-light-hint:                       rgba($text-light,.3);\n\n// Color variations\n$brand-default-darker:                  darken($brand-default,40);\n$brand-default-dark:                    darken($brand-default,26);\n$brand-default-light:                   lighten($brand-default,20);\n$brand-default-lighter:                 lighten($brand-default,40);\n\n$brand-inverse-darker:                  darken($brand-inverse,40);\n$brand-inverse-dark:                    darken($brand-inverse,26);\n$brand-inverse-light:                   lighten($brand-inverse,40);\n$brand-inverse-lighter:                 lighten($brand-inverse,80);\n\n$brand-primary-darker:                  darken($brand-primary,40);\n$brand-primary-dark:                    darken($brand-primary,26);\n$brand-primary-light:                   lighten($brand-primary,40);\n$brand-primary-lighter:                 lighten($brand-primary,80);\n\n$brand-info-darker:                     darken($brand-info,40);\n$brand-info-dark:                       darken($brand-info,26);\n$brand-info-light:                      lighten($brand-info,40);\n$brand-info-lighter:                    lighten($brand-info,80);\n\n$brand-success-darker:                  darken($brand-success,40);\n$brand-success-dark:                    darken($brand-success,26);\n$brand-success-light:                   lighten($brand-success,40);\n$brand-success-lighter:                 lighten($brand-success,80);\n\n$brand-warning-darker:                  darken($brand-warning,40);\n$brand-warning-dark:                    darken($brand-warning,26);\n$brand-warning-light:                   lighten($brand-warning,40);\n$brand-warning-lighter:                 lighten($brand-warning,80);\n\n$brand-danger-darker:                   darken($brand-danger,40);\n$brand-danger-dark:                     darken($brand-danger,26);\n$brand-danger-light:                    lighten($brand-danger,40);\n$brand-danger-lighter:                  lighten($brand-danger,80);\n\n\n\n\n//== Mobile\n//##\n\n//== Mobile Header\n//## Specific mobile widgets and components (used in mobile/components/mx-header)\n\n// Height\n$m-header-height:                       44px;\n\n// Background Color\n$m-header-bg:                           #FFF;\n\n\n\n\n//== Layout Spacing\n//## Advanced layout options (used in base/mixins/default-spacing)\n\n$default-spacing-top:                   35px;\n$default-spacing-right:                 40px;\n$default-spacing-bottom:                35px;\n$default-spacing-left:                  40px;\n\n$m-default-spacing-top:                 10px;\n$m-default-spacing-right:               15px;\n$m-default-spacing-bottom:              10px;\n$m-default-spacing-left:                15px;\n\n$t-default-spacing-top:                 20px;\n$t-default-spacing-right:               30px;\n$t-default-spacing-bottom:              20px;\n$t-default-spacing-left:                30px;\n\n\n\n\n//== Layouts\n//##\n\n// Scroll container / layout container default padding\n$padding-layoutcontainer-base:          0px;\n$m-padding-layoutcontainer-base:        0px;\n$t-padding-layoutcontainer-base:        0px;\n\n// Combined spacing\n$default-spacing:                       $default-spacing-top $default-spacing-right $default-spacing-bottom $default-spacing-left;\n$m-default-spacing:                     $m-default-spacing-top $m-default-spacing-right $m-default-spacing-bottom $m-default-spacing-left;\n$t-default-spacing:                     $t-default-spacing-top $t-default-spacing-right $t-default-spacing-bottom $t-default-spacing-left;\n\n\n\n\n\n//== Media queries breakpoints\n//## Define the breakpoints at which your layout will change, adapting to different screen sizes.\n\n// Extra small screen / phone Deprecated `$screen-xs` as of v3.0.1\n$screen-xs:                             480px;\n// Deprecated `$screen-xs-min` as of v3.2.0\n$screen-xs-min:                         $screen-xs;\n// Deprecated `$screen-phone` as of v3.0.1\n$screen-phone:                          $screen-xs-min;\n\n// Small screen / tablet Deprecated `$screen-sm` as of v3.0.1\n$screen-sm:                             768px;\n$screen-sm-min:                         $screen-sm;\n// Deprecated `$screen-tablet` as of v3.0.1\n$screen-tablet:                         $screen-sm-min;\n\n// Medium screen / desktop Deprecated `$screen-md` as of v3.0.1\n$screen-md:                             992px;\n$screen-md-min:                         $screen-md;\n// Deprecated `$screen-desktop` as of v3.0.1\n$screen-desktop:                        $screen-md-min;\n\n// Large screen / wide desktop Deprecated `$screen-lg` as of v3.0.1\n$screen-lg:                             1200px;\n$screen-lg-min:                         $screen-lg;\n// Deprecated `$screen-lg-desktop` as of v3.0.1\n$screen-lg-desktop:                     $screen-lg-min;\n\n// So media queries don't overlap when required, provide a maximum\n$screen-xs-max:                         ($screen-sm-min - 1);\n$screen-sm-max:                         ($screen-md-min - 1);\n$screen-md-max:                         ($screen-lg-min - 1);\n"],"names":[],"mappings":""} */

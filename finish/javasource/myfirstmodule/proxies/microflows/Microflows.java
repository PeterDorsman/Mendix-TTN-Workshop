// This file was generated by Mendix Modeler 7.22.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package myfirstmodule.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the MyFirstModule module
	public static void aCT_RemoveAlert(IContext context, myfirstmodule.proxies.Alert _alert)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Alert", _alert == null ? null : _alert.getMendixObject());
			Core.execute(context, "MyFirstModule.ACT_RemoveAlert", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void aCT_SubscribeToTTN(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "MyFirstModule.ACT_SubscribeToTTN", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.Date convertToDateTime(IContext context, java.lang.String _time)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("time", _time);
			return (java.util.Date)Core.execute(context, "MyFirstModule.ConvertToDateTime", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static myfirstmodule.proxies.DeviceData gET_LatestRecord(IContext context, myfirstmodule.proxies.Refresh _refreshObj)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("RefreshObj", _refreshObj == null ? null : _refreshObj.getMendixObject());
			IMendixObject result = (IMendixObject)Core.execute(context, "MyFirstModule.GET_LatestRecord", params);
			return result == null ? null : myfirstmodule.proxies.DeviceData.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static myfirstmodule.proxies.Refresh gET_RefreshObj(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			IMendixObject result = (IMendixObject)Core.execute(context, "MyFirstModule.GET_RefreshObj", params);
			return result == null ? null : myfirstmodule.proxies.Refresh.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void process_Data(IContext context, java.lang.String _topic, java.lang.String _payload)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Topic", _topic);
			params.put("Payload", _payload);
			Core.execute(context, "MyFirstModule.Process_Data", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean updateData(IContext context, myfirstmodule.proxies.Refresh _refresh)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Refresh", _refresh == null ? null : _refresh.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "MyFirstModule.UpdateData", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
}